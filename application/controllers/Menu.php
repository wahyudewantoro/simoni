<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class Menu extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Mmenu');
        $this->load->library('form_validation');
          $this->id_pengguna=$this->session->userdata('tax_pengguna');
    }

    private function cekAkses($var=null){
        return cek($this->id_pengguna,$var);
    }

    public function index()
    {
        $akses =$this->cekAkses(uri_string());
        $menu = $this->Mmenu->get_all();

        $data = array(
            'menu_data' => $menu
        );

        $this->template->load('blank','menu/Menu_list', $data);
    }

    

    public function create() 
    {
        $data = array(
            'button'    => 'Form Tambah',
            'action'    => site_url('menu/create_action'),
            'id_inc'    => set_value('id_inc'),
            'nama_menu' => set_value('nama_menu'),
            'link_menu' => set_value('link_menu'),
            'parent'    => set_value('parent'),
            'sort'      => set_value('sort'),
            'icon'      => set_value('icon'),
            'parentlist'=>$this->Mmenu->getParent()
	);
        $this->template->load('blank','menu/Menu_form', $data);
    }
    
    public function create_action() 
    {
        $this->_rules();

        if ($this->form_validation->run() == FALSE) {
            $this->create();
        } else {
            $data = array(
		'nama_menu' => $this->input->post('nama_menu',TRUE),
		'link_menu' => $this->input->post('link_menu',TRUE),
		'parent' => $this->input->post('parent',TRUE),
		'sort' => $this->input->post('sort',TRUE),
		'icon' => $this->input->post('icon',TRUE),
	    );

           $this->Mmenu->insert($data);
            
            redirect(site_url('menu'));
        }
    }
    
    public function update($id) 
    {
        $row = $this->Mmenu->get_by_id($id);

        if ($row) {
            $data = array(
                'button'     => 'Form Edit',
                'action'     => site_url('menu/update_action'),
                'id_inc'     => set_value('id_inc', $row->id_inc),
                'nama_menu'  => set_value('nama_menu', $row->nama_menu),
                'link_menu'  => set_value('link_menu', $row->link_menu),
                'parent'     => set_value('parent', $row->parent),
                'sort'       => set_value('sort', $row->sort),
                'icon'       => set_value('icon', $row->icon),
                'parentlist' =>$this->Mmenu->getParent()
	    );
            $this->template->load('blank','menu/Menu_form', $data);
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('menu'));
        }
    }
    
    public function update_action() 
    {
        $this->_rules();

        if ($this->form_validation->run() == FALSE) {
            $this->update($this->input->post('id_inc', TRUE));
        } else {
            $data = array(
		'nama_menu' => $this->input->post('nama_menu',TRUE),
		'link_menu' => $this->input->post('link_menu',TRUE),
		'parent' => $this->input->post('parent',TRUE),
		'sort' => $this->input->post('sort',TRUE),
		'icon' => $this->input->post('icon',TRUE),
	    );

            $this->Mmenu->update($this->input->post('id_inc', TRUE), $data);
            
            redirect(site_url('menu'));
        }
    }
    
    public function delete($id) 
    {
        $row = $this->Mmenu->get_by_id($id);

        if ($row) {
            $this->Mmenu->delete($id);
            
            
            redirect(site_url('menu'));
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('menu'));
        }
    }

    public function _rules() 
    {
	$this->form_validation->set_rules('nama_menu', 'nama menu', 'trim|required');
	$this->form_validation->set_rules('link_menu', 'link menu', 'trim|required');
	$this->form_validation->set_rules('parent', 'parent', 'trim|required');
	$this->form_validation->set_rules('sort', 'sort', 'trim|required');
	$this->form_validation->set_rules('icon', 'icon', 'trim|required');

	$this->form_validation->set_rules('id_inc', 'id_inc', 'trim');
	$this->form_validation->set_error_delimiters('<span class="text-danger">', '</span>');
    }

}

/* End of file Menu.php */
/* Location: ./application/controllers/Menu.php */
/* Please DO NOT modify this information : */
/* Generated by Harviacode Codeigniter CRUD Generator 2017-11-20 10:34:32 */
/* http://harviacode.com */